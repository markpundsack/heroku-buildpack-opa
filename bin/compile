#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

mktmpdir() {
  dir=$(mktemp -t opa-$1-XXXX)
  rm -rf $dir
  mkdir -p $dir
  echo $dir
}

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

# config
BUILDPACK_NAME="Opa"
BUILD_LANG="opa"
LANG_BUILD_NUMBER="687"
LANG_VERSION="1.0s3.5+build${LANG_BUILD_NUMBER}"
LANG_INSTALL_DIR="$BUILD_LANG"
COMPILE_CMD="opa -o app"
S3_BUCKET="heroku-opalang"

# parse and derive params
BUILD_DIR=$1
CACHE_DIR=$2
LP_DIR=`cd $(dirname $0); cd ..; pwd`
CACHE_STORE_DIR=$CACHE_DIR"/${BUILD_LANG}_modules/$LANG_VERSION"
CACHE_TARGET_DIR=$BUILD_DIR"/${BUILD_LANG}_modules"

# s3 packages
LANG_PACKAGE="http://${S3_BUCKET}.s3.amazonaws.com/${BUILD_LANG}-${LANG_BUILD_NUMBER}.tgz"

# vendor directories
#VENDORED_LANG="$(mktmpdir $BUILD_LANG)"
VENDORED_LANG="$BUILD_DIR/$LANG_INSTALL_DIR"

# download and unpack packages
echo "-----> Fetching $BUILDPACK_NAME binaries"
mkdir -p $VENDORED_LANG  && curl $LANG_PACKAGE -s -o -  | tar xzf - -C $VENDORED_LANG

# vendor language into the slug
#PATH="$BUILD_DIR/bin:$PATH"
#echo "-----> Vendoring $BUILD_LANG $LANG_VERSION"
#mkdir -p "$BUILD_DIR/bin"
#cp "$VENDORED_LANG/bin/$BUILD_LANG" "$BUILD_DIR/bin"

# setting up paths for building
PATH="$VENDORED_SCONS:$VENDORED_NODE/bin:$PATH"
INCLUDE_PATH="$VENDORED_NODE/include"
export CPATH="$INCLUDE_PATH"
export CPPPATH="$INCLUDE_PATH"

# unpack existing cache
rm -rf $CACHE_TARGET_DIR
if [ -d $CACHE_STORE_DIR ]; then
  cp -a $CACHE_STORE_DIR $CACHE_TARGET_DIR
fi

# compile
echo "-----> Compiling with $BUILD_LANG $LANG_VERSION"
cd $BUILD_DIR
HOME="$BUILD_DIR" $VENDORED_LANG/bin/$COMPILE_CMD *.opa 2>&1 | indent
if [ "${PIPESTATUS[*]}" != "0 0" ]; then
  echo " !     Failed to compile with $COMPILE_CMD"
  exit 1
else
  echo "       Compiled"
fi

# repack cache with new assets
if [ -d $CACHE_TARGET_DIR ]; then
  rm -rf $CACHE_STORE_DIR
  mkdir -p $(dirname $CACHE_STORE_DIR)
  cp -a $CACHE_TARGET_DIR $CACHE_STORE_DIR
fi
